app:
  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
  baseUrl: https://backstage.kube-dev-cs-1.elliottmgmt.com

backend:
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  baseUrl: https://backstage.kube-dev-cs-1.elliottmgmt.com
  listen:
    port: 7007
    # The following host directive binds to all IPv4 interfaces when its value
    # is "0.0.0.0". This is the most permissive setting. The right value depends
    # on your specific deployment. If you remove the host line entirely, the
    # backend will bind on the interface that corresponds to the backend.baseUrl
    # hostname.
    host: 0.0.0.0

  # config options: https://node-postgres.com/api/client
  database:
    client: pg
    connection:
      host: 10.43.63.35 # ${POSTGRES_SERVICE_HOST}
      port: ${POSTGRES_SERVICE_PORT}
      user: ${POSTGRES_USERNAME}
      password: ${POSTGRES_PASSWORD}
      # https://node-postgres.com/features/ssl
      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      # ssl:
      #   ca: # if you have a CA file and want to verify it you can uncomment this section
      #     $file: <file-path>/ca/server.crt
      #
kubernetes:
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: 'config'
      clusters:
        - url: https://rancher-dev-cs.elliottmgmt.com/k8s/clusters/c-hb4xn
          name: dev-cs-1
          authProvider: 'serviceAccount'
          skipTLSVerify: true
          skipMetricsLookup: true
          serviceAccountToken: "kubeconfig-u-wpfcvgvqpw:79qv2zx5fs5vx5k7n5w8dwwj882jbfn99jr9n2zf5gxt8fdbzmsk6f"
          caData: ${K8S_CA_DATA}

integrations:
  bitbucketServer:
    - host: stash.elliottmgmt.com
      apiBaseUrl: https://stash.elliottmgmt.com/rest/api/1.0
      token: ${BITBUCKET_API_TOKEN}

techdocs:
  builder: 'local'
  publisher:
    type: 'local'
  generator:
    runIn: 'local'

catalog:
  providers:
    bitbucketServer:
      stash:
        host: 'stash.elliottmgmt.com'
        catalogPath: /catalog-info.yaml
      schedule:
        frequency: { minutes: 30 }
        timeout: { minutes: 3}
        host: 'stash.elliottmgmt.com'
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    - type: file
      target: /templates/rust/template.yaml
      rules:
        - allow: [Template]
    - type: file
      target: /templates/golang/template.yaml
      rules:
        - allow: [Template]
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]
