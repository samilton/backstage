app:
  title: Scaffolded Backstage App
  baseUrl: https://backstage.kube-dev-cs-1.elliottmgmt.com

organization:
  name: Elliott Management

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/tutorials/backend-to-backend-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: https://backstage.kube-dev-cs-1.elliottmgmt.com
  listen:
    port: 7007
    # Uncomment the following host directive to bind to all IPv4 interfaces and not just the baseUrl hostname.
    # host: 0.0.0.0
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: better-sqlite3
    connection: ':memory:'
  cache:
    store: memory
  reading:
    allow: 
      - host: "localhost:7070"
      - host: "0.0.0.0:7070"
      - host: "0.0.0.0"
      - host: "elliottmgmtdev.service-now.com"
      - host: "artifactory.elliottmgmt.com"
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

kubernetes:
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: 'config'
      clusters:
        - url: https://rancher-dev-cs.elliottmgmt.com/k8s/clusters/c-hb4xn
          name: dev-cs-1
          authProvider: 'serviceAccount'
          skipTLSVerify: true
          skipMetricsLookup: true
          serviceAccountToken: "kubeconfig-u-wpfcvgvqpw:79qv2zx5fs5vx5k7n5w8dwwj882jbfn99jr9n2zf5gxt8fdbzmsk6f"

integrations:
  bitbucketServer:
    - host: stash.elliottmgmt.com
      apiBaseUrl: https://stash.elliottmgmt.com/rest/api/1.0
      token: MzU1NzA2MTQ3MTU5Otsdc9R9051tLmhvGOq9jwN2G+HP

proxy:
  '/test':
    target: 'https://example.com'
    changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  providers: {}

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  providers:
    bitbucketServer:
      stash:
        host: 'stash.elliottmgmt.com'
        catalogPath: /catalog-info.yaml
      schedule:
        frequency: { minutes: 5 }
        timeout: { minutes: 3}
        host: 'stash.elliottmgmt.com'
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    - type: file
      target: /templates/rust/template.yaml
      rules:
        - allow: [Template]
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]
